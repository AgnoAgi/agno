name: Main Validation

on:
  push:
    branches:
      - 'main'  # Run on all branches
  pull_request:
    branches:
      - 'release*'  # Run on PRs targeting release branches

jobs:
  style-check:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
      fail-fast: true  # Stop all matrix jobs if one fails

    defaults:
      run:
        working-directory: libs/agno

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade \
            pip setuptools wheel \
            ruff mypy pytest types-pyyaml
          pip install --no-deps -r requirements.txt
      - name: Ruff format
        run: |
          ruff format .
      - name: Ruff check
        run: |
          ruff check .
      - name: Mypy
        run: |
          mypy .

  # Run tests for OpenAI
  test-openai:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: true  # Stop all matrix jobs if one fails
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Run dev setup
        working-directory: .
        run: |
          ./scripts/dev_setup.sh
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
      - name: Run OpenAI tests
        if: contains(steps.changed-files.outputs.all_changed_files, 'libs/agno/models/openai') || contains(steps.changed-files.outputs.all_changed_files, 'libs/agno/tests/integration/models/openai')
        working-directory: .
        run: |
          source .venv/bin/activate
          python -m pytest ./libs/agno/tests/integration/models/openai

  # Run tests for Google
  test-google:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: true  # Stop all matrix jobs if one fails
    env:
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Run dev setup
        working-directory: .
        run: |
          ./scripts/dev_setup.sh
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
      - name: Run Google tests
        if: contains(steps.changed-files.outputs.all_changed_files, 'libs/agno/models/google') || contains(steps.changed-files.outputs.all_changed_files, 'libs/agno/tests/integration/models/google')
        working-directory: .
        run: |
          source .venv/bin/activate
          python -m pytest ./libs/agno/tests/integration/models/google

  # Run remaining integration tests
  test-remaining:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
      fail-fast: true  # Stop all matrix jobs if one fails
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Run dev setup
        working-directory: .
        run: |
          ./scripts/dev_setup.sh
      - name: Run remaining integration tests
        working-directory: .
        run: |
          source .venv/bin/activate
          python -m pytest --ignore=./libs/agno/tests/integration/models ./libs/agno/tests/integration
